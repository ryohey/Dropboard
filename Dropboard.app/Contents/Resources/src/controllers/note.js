// Generated by CoffeeScript 1.3.3
var Note, Q, Reader, Rest, fs,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Rest = require("./rest");

Reader = require("../helpers/reader");

Q = require("../helpers/array-query");

fs = require("fs");

Note = (function(_super) {

  __extends(Note, _super);

  function Note(appConfig) {
    this.get = __bind(this.get, this);

    this.post = __bind(this.post, this);
    Note.__super__.constructor.call(this, "note", appConfig);
  }

  Note.prototype.post = function(req, res) {
    var data;
    data = req.body;
    return fs.writeFile(this.dataPath + "note.txt", JSON.stringify(data), function(err) {
      if (err) {
        console.log(err);
      }
      return res.send(!err);
    });
  };

  Note.prototype.get = function(req, res) {
    var _this = this;
    return res.format({
      json: function() {
        return res.send(_this.reader.get().all());
      },
      html: function() {
        return res.render(_this.name, {
          title: _this.appConfig.name
        });
      }
    });
  };

  return Note;

})(Rest);

module.exports = Note;
