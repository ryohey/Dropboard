// Generated by CoffeeScript 1.3.3
var Watcher, fs,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

fs = require("fs");

Watcher = (function() {

  function Watcher(io, path) {
    this.start = __bind(this.start, this);

    /* WebSocketの準備
    */
    this.io = io;
    this.path = path;
  }

  Watcher.prototype.start = function() {
    var _this = this;
    this.io.set('log level', 1);
    return this.io.sockets.on('connection', function(socket) {
      /**
       * クライアントからの接続時にDATA_PATHの
       * 監視を開始する.
      */

      var watcher, watcher2;
      watcher = fs.watch(_this.path, function(event, filename) {
        /**
         * ディレクトリに変更があった際にupdateイベントを
         * クライアントにpushする.
        */
        return socket.emit('update');
      });
      watcher2 = fs.watch(_this.path + "note/note.txt", function(event, filename) {
        /**
         * ディレクトリに変更があった際にupdateイベントを
         * クライアントにpushする.
        */
        return socket.emit('update');
      });
      /**
       * クライアントから切断された際に
       * ディレクトリの監視を停止する.
      */

      return socket.on('disconnect', function() {
        watcher.close();
        return watcher2.close();
      });
    });
  };

  return Watcher;

})();

module.exports = Watcher;
