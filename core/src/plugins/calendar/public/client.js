// Generated by CoffeeScript 1.10.0
var MyCalendar,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

MyCalendar = (function() {
  function MyCalendar() {
    this.createFullCalendar = bind(this.createFullCalendar, this);
    this.select = bind(this.select, this);
    this.eventClick = bind(this.eventClick, this);
    this.eventDrop = bind(this.eventDrop, this);
    this.updateEvent = bind(this.updateEvent, this);
    this.removeEvent = bind(this.removeEvent, this);
    this.eventResize = bind(this.eventResize, this);
    this.isLongEvent = bind(this.isLongEvent, this);
    $.getJSON("calendar", (function(_this) {
      return function(events) {
        _this.elm = _this.createFullCalendar(events);
        return _this.fc = _this.elm.data("fullCalendar");
      };
    })(this));
  }

  MyCalendar.prototype.isLongEvent = function(event) {
    if ((event.start != null) && (event.end != null)) {
      return formatDate(event.start, "yyyyMMdd") !== formatDate(event.end, "yyyyMMdd");
    } else {
      return false;
    }
  };


  /* fullcalendar callbacks */

  MyCalendar.prototype.eventResize = function(event, dayDelta, minuteDelta, allDay, revertFunc, jsEvent, ui, view) {
    if (this.isLongEvent(event)) {
      event.allDay = true;
    }
    return this.updateEvent(event);
  };

  MyCalendar.prototype.eventData = function(event) {
    return {
      title: event.title,
      start: event.start,
      end: event.end,
      allDay: event.allDay,
      _id: event._id
    };
  };

  MyCalendar.prototype.removeEvent = function(event, complete, error) {
    return $.ajax({
      url: '/calendar',
      type: 'delete',
      data: this.eventData(event),
      success: (function(_this) {
        return function(res) {
          _this.fc.removeEvents(event._id);
          return typeof complete === "function" ? complete(res) : void 0;
        };
      })(this),
      error: (function(_this) {
        return function(res) {
          return typeof error === "function" ? error(res) : void 0;
        };
      })(this)
    });
  };

  MyCalendar.prototype.updateEvent = function(event, complete, error) {
    return $.ajax({
      url: '/calendar',
      type: 'put',
      data: this.eventData(event),
      success: (function(_this) {
        return function(res) {
          _this.fc.updateEvent(event);
          return typeof complete === "function" ? complete(res) : void 0;
        };
      })(this),
      error: (function(_this) {
        return function(res) {
          return typeof error === "function" ? error(res) : void 0;
        };
      })(this)
    });
  };

  MyCalendar.prototype.eventDrop = function(event, dayDelta, minuteDelta, allDay, revertFunc, jsEvent, ui, view) {
    return this.updateEvent(event);
  };

  MyCalendar.prototype.eventClick = function(event, jsEvent, view) {
    var end, items, showRange, start;
    console.log(event._id);
    start = formatDate(event.start, "HH:mm");
    if (event.end != null) {
      end = formatDate(event.end, "HH:mm");
    } else {
      end = "00:00";
    }
    items = $("<ul class=\"inputs\">\n  <li>Title<input type=\"text\" class=\"title\" value=\"" + event.title + "\"></li>\n  <li><input type=\"checkbox\" class=\"allDay\" value=\"allDay\" " + (event.allDay || this.isLongEvent(event) ? "checked" : "") + " " + (this.isLongEvent(event) ? "disabled" : "") + ">All day</li>\n  <li class=\"range\">Start<input type=\"text\" class=\"start\" value=\"" + start + "\"></li>\n  <li class=\"range\">End<input type=\"text\" class=\"end\" value=\"" + end + "\"></li>\n  <li><a class=\"delete button button_red\">Delete</a></li>\n</ul>");
    showRange = (function(_this) {
      return function() {
        if (!items.find(".allDay").attr("checked")) {
          return items.find(".range").show();
        } else {
          return items.find(".range").hide();
        }
      };
    })(this);
    items.find(".allDay").change(showRange);
    showRange();
    items.find(".delete").click((function(_this) {
      return function() {
        $("#contextMenu").hide();
        return _this.removeEvent(event);
      };
    })(this));
    return contextMenu(jsEvent.pageX, jsEvent.pageY, "Edit the event", "Cancel", "OK", items, (function(_this) {
      return function(elm) {
        var allDay, endArr, hourExp, startArr;
        elm.hide();
        event.title = elm.find(".title").val();
        hourExp = /([0-9]+)[\:：\s\,]([0-9]+)/;
        allDay = items.find(".allDay").attr("checked");
        if (!allDay) {
          event.allDay = false;
          startArr = elm.find(".start").val().match(hourExp);
          if (startArr.length === 3) {
            event.start.setHours(startArr[1]);
            event.start.setMinutes(startArr[2]);
          }
          endArr = elm.find(".end").val().match(hourExp);
          if (endArr.length === 3) {
            if (!event.end) {
              event.end = new Date(event.start);
            }
            event.end.setHours(endArr[1]);
            event.end.setMinutes(endArr[2]);
          }
        } else {
          event.allDay = true;
        }
        return _this.updateEvent(event);
      };
    })(this));
  };

  MyCalendar.prototype.select = function(start, end, allDay, jsEvent, view) {
    var items;
    items = $("<ul class=\"inputs\">\n  <li>Title<input type=\"text\" class=\"title\" value=\"\"></li>\n</ul>");
    return contextMenu(jsEvent.pageX, jsEvent.pageY, "Create an event", "Cancel", "OK", items, (function(_this) {
      return function(elm) {
        var event, title;
        elm.hide();
        title = elm.find(".title").val();
        if (title) {
          event = {
            title: title,
            start: start,
            end: end,
            allDay: allDay
          };
          _this.fc.renderEvent(event, true);
          console.log("added id:" + event._id);
          _this.fc.removeEvents(event._id);
          return $.post("calendar", _this.eventData(event), function(res) {});
        }
      };
    })(this));
  };


  /* */

  MyCalendar.prototype.createFullCalendar = function(events) {
    console.log(events);
    return $('#calendar').fullCalendar({
      header: {
        left: 'prev,next today',
        center: 'title',
        right: 'month,agendaWeek,agendaDay'
      },
      columnFormat: {
        month: 'ddd',
        week: 'M/d（ddd）',
        day: 'M/d（ddd）'
      },
      timeFormat: {
        '': 'H:mm',
        agenda: 'H:mm{ - H:mm}'
      },
      axisFormat: 'H:mm',
      buttonText: {
        prev: '&nbsp;&#9668;&nbsp;',
        next: '&nbsp;&#9658;&nbsp;',
        prevYear: '&nbsp;&lt;&lt;&nbsp;',
        nextYear: '&nbsp;&gt;&gt;&nbsp;'
      },
      selectable: true,
      editable: true,
      selectHelper: true,
      eventDrop: this.eventDrop,
      events: "/calendar",
      select: this.select,
      eventClick: this.eventClick,
      eventResize: this.eventResize
    });
  };

  return MyCalendar;

})();

$(function() {
  var calendar, socket;
  calendar = new MyCalendar();
  socket = io.connect('http://localhost');
  socket.on('update', function() {
    return calendar.fc.refetchEvents();
  });
  return $(window).keydown(function(e) {
    if (e.ctrlKey && e.keyCode === 13) {
      if ($("#contextMenu").is(':visible')) {
        $("#contextMenu .ok").click();
      }
    }
    if (e.keyCode === 27) {
      return $("#contextMenu").hide();
    }
  });
});
