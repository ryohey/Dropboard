// Generated by CoffeeScript 1.3.3
var clear, disableWriteButton, documentTitle, enableWriteButton, getFileHTML, lbAjax, messageHTML, more, update, updateTitle, writeButton;

lbAjax = new LBAjax;

documentTitle = document.title;

getFileHTML = function(data) {
  var fileHTML, files;
  if (!data.file) {
    return "";
  }
  fileHTML = $("<div/>").addClass("file");
  try {
    files = JSON.parse(data.file);
    $.each(files, function(val, key) {
      var elm, fileName;
      elm = $("<a target=\"_blank\" href=\"" + key + "\"></a>");
      if (isImage(key)) {
        elm.fancybox().append($("<img/>").attr("src", key));
      } else if (isAudio(key)) {
        elm = $("<audio/>").attr("src", key).attr("controls", "controls");
      } else {
        fileName = parseURL(key).fileName;
        elm.addClass("otherfile").text(fileName);
      }
      return fileHTML.append(elm);
    });
  } catch (e) {
    console.log("filehtml error");
  }
  return fileHTML;
};

/*  発言フィードを生成
*/


messageHTML = function(data) {
  var date, datestr, fileHTML;
  date = new Date(data.date);
  datestr = naturalFormatDate(date);
  fileHTML = getFileHTML(data);
  return $("<article class=\"box new\">\n  <header>\n    <a rel=\"author\">" + data.name + "</a>\n    <time>" + datestr + "</text>\n  </header>\n  <p class=\"text\">" + (formatMessage(data.text)) + "</p>\n</article>").css("display", "none").append(fileHTML);
};

/*  全消去
*/


clear = function() {
  return $("#posts").html("");
};

/*  アップデート処理
*/


update = function(complete) {
  return lbAjax.update(function(data) {
    $.each(data, function() {
      return messageHTML(this).prependTo("#posts").show("slow");
    });
    updateTitle();
    return typeof complete === "function" ? complete() : void 0;
  });
};

updateTitle = function() {
  var newCount;
  newCount = $("#posts article.new").length;
  if (newCount > 0) {
    return document.title = "(" + newCount + ")" + documentTitle;
  } else {
    return document.title = documentTitle;
  }
};

/*  古いデータを取ってくる
*/


more = function() {
  return lbAjax.more(function(data) {
    data.reverse();
    return $.each(data, function() {
      return messageHTML(this).appendTo("#posts").show("slow");
    });
  });
};

/*  書き込むボタン無効化
*/


disableWriteButton = function() {
  $("#write").attr("disabled", true);
  return $("#write").addClass("disable");
};

/*  書き込むボタン有効化
*/


enableWriteButton = function() {
  $("#write").attr("disabled", false);
  $("#write").removeAttr("disabled");
  return $("#write").removeClass("disable");
};

/*  「書き込む」ボタン押し下げ時
*/


writeButton = function() {
  var files, userName;
  userName = $("#user .name").val();
  disableWriteButton();
  files = $("#text").data("files");
  if (files) {
    lbAjax.upload(files, function(response) {
      console.log(response);
      $("#text").data("files", null).removeClass("attached");
      return lbAjax.write({
        name: userName,
        date: new Date(),
        text: $("#text").val(),
        file: response
      }, function() {
        return $("#text").val("");
      });
    });
  } else {
    lbAjax.write({
      name: userName,
      date: new Date(),
      text: $("#text").val()
    }, function() {
      return $("#text").val("");
    });
  }
  $.cookie('name', userName, {
    expires: 30
  });
  return $("#files").html("").hide();
};

$(function() {
  var checkUnread, socket, topBtn;
  socket = io.connect('http://localhost');
  socket.on('update', function(data) {
    return update();
  });
  $("#write").click(writeButton);
  disableWriteButton();
  $(window).keydown(function(e) {
    if (e.ctrlKey && e.keyCode === 13) {
      if (document.activeElement.id === 'text') {
        if ($("#text").val() !== "") {
          writeButton();
        }
      }
      event.preventDefault();
    }
    if (e.keyCode === 27) {
      return $("#text").blur();
    }
  });
  $("#text").bind('keyup change', function() {
    if ($(this).val() === "") {
      return disableWriteButton();
    } else {
      return enableWriteButton();
    }
  }).bind("drop", function(e) {
    var file, files;
    files = e.originalEvent.dataTransfer.files;
    $("#files").show().html((function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        _results.push($("<li/>").text(file.name));
      }
      return _results;
    })());
    $(this).data("files", files);
    $(this).addClass("attached");
    e.preventDefault();
    return e.stopPropagation();
  });
  topBtn = $('#goTop');
  topBtn.hide();
  $(window).scroll(function() {
    if ($(this).scrollTop() > 100) {
      return topBtn.fadeIn();
    } else {
      return topBtn.fadeOut();
    }
  });
  topBtn.click(function() {
    $('body,html').animate({
      scrollTop: 0
    }, 500);
    return false;
  });
  $("#text").focus(function() {
    $("#content header").addClass("active");
    $(this).animate({
      height: "100px"
    });
    return $("#posts").animate({
      "margin-top": "156px"
    });
  });
  $("#text").blur(function() {
    $(this).animate({
      height: "16px"
    });
    return $("#posts").animate({
      "margin-top": "70px"
    }, function() {
      return $("#content header").removeClass("active");
    });
  });
  $(window).bottom();
  $(window).bind("bottom", function() {
    return more();
  });
  checkUnread = function() {
    $("#posts article").removeClass("new");
    return updateTitle();
  };
  setInterval(function() {
    if (document.hasFocus()) {
      return checkUnread();
    }
  }, 3000);
  window.onfocus = checkUnread;
  $(document).click(checkUnread);
  return update(checkUnread);
});
